%------------------IMPORTANTE---------------------
%Para poder compilar lo que tenemos acá, hay que descargar los paquetes de esta página. En el mismo .rar están las instrucciones
%para que todo les arranque 10 puntos.

%http://www.dc.uba.ar/materias/aed2/2015/2c/descargas/otros/Paquetes-Latex.zip/view

%De paso, ese archivo viene con el .tex de los TAD básicos que sirve como EXCELENTE ejemplo para poder hacer todo lo que
%necesitamos, ya que ese archivo está hecho con todos los macros que nos proveen los docentes.
%Por si no es suficiente, creo que avancé lo suficiente como para haber dejado un par de ejemplos de axiomas (que es lo único
%que nos falta del TAD Alta Seguridad) para que puedan seguir. Igual, cualquier cosa consultenme.
%Insisto en el uso de los macros que nos dieron porque nos ahorra todos los dolores de cabeza que son tratar de hacer
%el formato lo más prolijo posible o que las cosas no se nos vayan de linea u otras cosas por el estilo. Los macros hacen
%todo esto por nosotros :D
%No se asusten con obtenerAgentes(moverAS(a,id)). Esa función de por si es un quilombo y no había forma de dejar una fórmula de
%Latex linda xD guíense más por el .tex de los TAD básicos y por las otras axiomatizaciones.
%Una vez que terminaron de laburar y la cosa les compila (testeen todo el tiempo si les compila) commiteen acá.
%Saludos! - Alan

\documentclass[10pt, a4paper]{article}
\usepackage[paper=a4paper, left=1.5cm, right=1.5cm, bottom=1.5cm, top=3.5cm]{geometry}
\usepackage[latin1]{inputenc}
\usepackage[T1]{fontenc}
\usepackage[spanish]{babel}
\usepackage{indentfirst}
\usepackage{fancyhdr}
\usepackage{latexsym}
\usepackage{lastpage}
\usepackage{aed2-symb,aed2-itef,aed2-tad}
\usepackage[colorlinks=true, linkcolor=blue]{hyperref}
\usepackage{calc}

\newcommand{\f}[1]{\text{#1}}
\renewcommand{\paratodo}[2]{$\forall~#2$: #1}

\sloppy

\parskip=5pt % 10pt es el tamaño de fuente

% Pongo en 0 la distancia extra entre ítemes.
\let\olditemize\itemize
\def\itemize{\olditemize\itemsep=0pt}

% Acomodo fancyhdr.
\pagestyle{fancy}
\thispagestyle{fancy}
\addtolength{\headheight}{1pt}
\lhead{Algoritmos y Estructuras de Datos II}
\rhead{$2^{\mathrm{do}}$ cuatrimestre de 2015}
\cfoot{\thepage /\pageref{LastPage}}
\renewcommand{\footrulewidth}{0.4pt}

\begin{document}

\begin{tad}{\tadNombre{Alta Seguridad}}

\tadIgualdadObservacional{a}{a'}{altaSeguridad}{($ rastrillaje(a) \igobs rastrillaje(a')) \land (obtenerAgentes(a) \igobs obtenerAgentes(a')) \land (posicionEstudiantes(a) \igobs posicionEstudiantes(a')) \land (posicionHippies(a) \igobs posicionHippies(a')) $}

\tadGeneros{altaSeguridad}

\tadExporta{altaSeguridad, generadores, observadores}

\tadUsa{\tadNombre{Bool, Nat, Conjunto, Pos, d\_agentes, Rastrillaje}}

\tadObservadores

\tadOperacion{obtenerAgentes}{altaSeguridad a}{d\_agentes}{}
\tadOperacion{posicionEstudiantes}{altaSeguridad a}{conj(pos)}{}
\tadOperacion{posicionHippies}{altaSeguridad a}{conj(pos)}{}
\tadOperacion{rastrillaje}{altaSeguridad a}{rastrillaje}{}

\tadGeneradores

\tadOperacion{iniciar}{rastrillaje/r,d\_agentes/d}{altaSeguridad}{ (\paratodo{Nat}{c}) $(c \in claves(d) ) \land \Pi_1(obtener(c,d)) \in libres(r) \land \Pi_2(obtener(c,d)) = 0 \land \Pi_3(obtener(c,d)) = 0$ \smallskip $\land$ (\paratodo{Nat}{c'}) $(c' \in claves(d) - Ag(c,\emptyset)$  $\land$ \\ $\neg(\Pi_1 (obtener(c,d) = \Pi_1 (obtener(c,d) ) ) ) $}
\tadOperacion{ingresarEstudiante}{altaSeguridad/a,pos/p}{altaSeguridad}{$p \in disponibles(a) \land posIngreso(a,p)$}
\tadOperacion{ingresarHippie}{altaSeguridad/a,pos/p}{altaSeguridad}{$p \in disponibles(a) \land posIngreso(a,p)$}
\tadOperacion{moverEstudiante}{altaSeguridad/a,pos/pi,pos/pf}{altaSeguridad}{$p \in posicionEstudiantes(a) \land (pf \in movimientosPosibles(a,pi) \lor puedeSalir(a,pi,pf))$}
\tadOperacion{moverHippie}{altaSeguridad/a,pos/pi}{altaSeguridad}{$pi \in posicionHippies(a) \land \neg\emptyset?(movimientosPosibles(a,pi))$}
\tadOperacion{moverAS}{altaSeguridad/a,nat/id}{altaSeguridad}{$id \in claves(obtenerAgentes(a)) \land \neg\emptyset?(movimientosPosibles(a,posicionDeAgente(a,id))) \land sancionesDeAgente(a,id) \leq 3$}


\tadOtrasOperaciones
\tadOperacion{\#estudiantes}{altaSeguridad/a}{nat}{}
\tadOperacion{\#hippies}{altaSeguridad/a}{nat}{}
\tadOperacion{acechar}{altaSeguridad/a,pos/p,conj(pos)/cp}{pos}{}
\tadOperacion{bloqueo?}{altaSeguridad/a,pos/p,conj(pos)/cp}{bool}{}
\tadOperacion{capturasDeAgente}{altaSeguridad/a,nat/id}{nat}{}
\tadOperacion{conjCapturas}{altaSeguridad/a,nat/id}{conj(nat,at)}{}
\tadOperacion{conjPosAgentes}{d\_agentes/d}{conj(pos)}{}
\tadOperacion{disponibles}{altaSeguridad/a}{conj(pos)}{}
\tadOperacion{hippiesAEliminar}{altaSeguridad/a,pos/p,conj(pos)/cp}{conj(pos)}{}
\tadOperacion{masCercano}{altaSeguridad/a,pos/p,conj(pos)/cp}{pos}{}
\tadOperacion{masVigilante}{altaSeguridad/a}{nat}{}
\tadOperacion{movimientosPosibles}{altaSeguridad/a,pos/p}{conj(pos)}{}
\tadOperacion{posicionAgentes}{altaSeguridad/a}{conj(pos)}{}
\tadOperacion{posicionAgentes'}{d\_agentes/d}{conj(pos)}{}
\tadOperacion{posicionDeAgente}{altaSeguridad/a,nat/n}{pos}{}
\tadOperacion{posicionesAdyacentes}{pos/p}{conj(pos)}{}
\tadOperacion{posIngreso}{altaSeguridad/a,pos/p}{bool}{}
\tadOperacion{puedeSalir}{altaSeguridad/a,pos/pi,pos/pf}{bool}{}
\tadOperacion{reDefinirDiccAg}{}{}{}
\tadOperacion{rodeadoDeAS}{altaSeguridad/a,pos/p}{bool}{}
\tadOperacion{rodeadoDeEstudiantes}{altaSeguridad/a,pos/p}{bool}{}
\tadOperacion{rodeadoDeHippies}{altaSeguridad/a,pos/p}{bool}{}
\tadOperacion{sancionesDeAgente}{altaSeguridad/a,nat/id}{nat}{}
\tadOperacion{tieneMasCapturas}{conj(nat,at)}{(nat,nat)}{}


\tadAxiomas[\paratodo{altaSeguridad}{a}, \paratodo{rastrillaje}{r}, \paratodo{d\_agentes}{d}, \paratodo{pos}{p,pi,pf}, \paratodo{id,n}{nat}, \paratodo{conj(nat,nat)}{c}]

\tadAxioma{obtenerAgentes(iniciar(r,ca))}{ca}
\tadAxioma{obtenerAgentes(ingresarEstudiante(a,p))}{obtenerAgentes(a)}
\tadAxioma{obtenerAgentes(ingresarHippie(a,p))}{obtenerAgentes(a)}
\tadAxioma{obtenerAgentes(moverEstudiante(a,pi,pf))}{obtenerAgentes(a)}
\tadAxioma{obtenerAgentes(moverHippie(a,pi))}{obtenerAgentes(a)}
\tadAxioma{obtenerAgentes(moverAS(a,id))}{\IF bloqueo?(moverAS(a,id), posicionesAdyacentes(acechar(posicionDeAgente(a,id), posicionHippies(a)) $\cap$ posicionHippies(a)) THEN {\IF bloqueo?(moverAS(a,id), posicionesAdyacentes(acechar(posicionDeAgente(a,id),posicionEstudiantes(a) $\cap$ posicionesEstudiantes(a)) THEN reDefinirDiccAg(a,participantes(a,acechar(a, posicionDeAgente(a,id),posicionHippies(a) ))),1,1, obtenerAgentes(a)) ELSE reDefinirDiccAg(a,participantes(moverAS(a,id),acechar(a, posicionDeAgente(a,id),posicionHippies(a) ))),1,0, obtenerAgentes(a)) FI} ELSE {\IF bloqueo?(moverAS(a,id),posicionesAdyacentes(acechar\\((posicionDeAgente(a,id),posicionHippies(a)))) $\cap$ posicionEstudiantes(a)) THEN reDefinirDiccAg(a,participantes(a,acechar(a, posicionDeAgente(a,id),posicionHippies(a) ))),0,1,obtenerAgentes(a)) ELSE def(id,(acechar(a,posicionDeAgente(a,id),posicionHippies(a)) , capturas(a,id) , sanciones(a,id) ),obtenerAgentes(a)) FI} FI}

\tadAxioma{posicionEstudiantes(iniciar(r,ca))}{{}}
\tadAxioma{posicionEstudiantes(ingresarEstudiante(a,p))}{\IF rodeadoDeHippies(p) THEN posicionEstudiantes(a) ELSE Ag(p,posicionEstudiantes(a)) FI}
\tadAxioma{posicionEstudiantes(ingresarHippie(a,p))}{\IF rodeadoDeEstudiantes(p) THEN Ag(p,posicionEstudiantes(a)) ELSE posicionEstudiantes(a) FI}
\tadAxioma{posicionEstudiantes(moverEstudiante(a,pi,pf))}{\IF rodeadoDeHippies(pf) $\lor$ puedeSalir(a,pi,pf) THEN posicionEstudiantes(a) ELSE Ag(pf,posicionEstudiantes(a) - {pi})FI }
\tadAxioma{posicionEstudiantes(moverHippie(a,pi))}{posicionEstudiantes(a) - ( \IF bloqueo?(a,acechar(a,pi,posicionEstudiantes(a)),posicionesAdyacentes(a,acechar(a,pi,posicionEstudiantes(a)) $\cap$ posicionEstudiantes(a))THEN ELSE {} FI )}
\tadAxioma{posicionEstudiantes(moverAS(a,id))}{posicionEstudiantes(a)}

\tadAxioma{posicionHippies(iniciar(r,ca))}{{}}
\tadAxioma{posicionHippies(ingresarEstudiante(a,p))}{\IF rodeadoDeHippies(a,p) THEN Ag(p,posicionHippies(a)) ELSE posicionHippies(a) FI}
\tadAxioma{posicionHippies(ingresarHippie(a,p))}{\IF rodeadoDeEstudiantes(a,p) $\lor$ rodeadoDeAS(a,p) THEN posicionHippies(a) ELSE Ag(p,posicionHippies(a)) FI}
\tadAxioma{posicionHippies(moverEstudiante(a,pi,pf))}{\IF rodeadoDeHippies(a,pf) THEN Ag(pf,posicionHippies(a)) ELSE posicionHippies(a) FI}
\tadAxioma{posicionHippies(moverHippie(a,pi))}{Ag(acechar(a,pi,posicionEstudiantes(a)),(posicionHippies(a) - {pi}))}
\tadAxioma{posicionHippies(moverAS(a,id))}{posicionesDeHippies(a) - hippiesAEliminar(a,sechar(a,posicionDeAgente(a,id),posicionHippies(a)),posicionesAdyacentes(acechar(a,posicionDeAgente(a,id),posicionHippies(a)))) $\cap$ posicionesDeHippies(a))}

\tadAxioma{rastrillaje(iniciar(r,ca))}{r}
\tadAxioma{rastrillaje(ingresarEstudiante(a,p))}{rastrillaje(a)}
\tadAxioma{rastrillaje(ingresarHippie(a,p))}{rastrillaje(a)}
\tadAxioma{rastrillaje(moverEstudiante(a,pi,pf))}{rastrillaje(a)}
\tadAxioma{rastrillaje(moverHippie(a,pi))}{rastrillaje(a)}
\tadAxioma{rastrillaje(moverAS(a,pi))}{rastrillaje(a)}

\tadAxioma{#estudiantes(a)}{#posicionEstudiantes(a)}

\tadAxioma{#hippies(a)}{#posicionHippies(a)}

\tadAxioma{acechar(a,p,cp)}{\IF \emptyset$?($cp$) THEN masCercano(a,p,salidas(rastrillaje(a))-disponibles(a)) ELSE masCercano(a,p,cp) FI}

\tadAxioma{bloqueo?(a,p,cp)}{\IF \emptyset$?($cp$) THEN false ELSE \emptyset$?($movimientosPosibles(a, dameUno(cp)$) $\lor$ bloqueo?(a,p,sinUno(cp))FI}

\tadAxioma{capturasDeAgente(a,id)}{$\Pi_2$(obtener(n,obtenerAgentes(a)))}

\tadAxioma{conjCapturas(a,n)}{\IF $\neg$(def?(n)) THEN {} ELSE (n,capturasDeAgente(a,n)) $\cup$ conjCapturas(a,n+1) FI}


\tadAxioma{}{}
\IF THEN ELSE FI

\end{tad}

\end{document}
